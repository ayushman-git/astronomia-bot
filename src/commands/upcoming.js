const name = "upcoming";
const { MessageEmbed } = require("discord.js");
const axios = require("axios");

const flights = require("../assets/flightData");
const events = require("../assets/eventData");

module.exports = {
  name,
  // aliases: ["v"],
  description: "Displays upcoming events/flights",
  async execute(message, args) {
    message.channel.startTyping();
    if (args.length === 0) {
      const currentFlightEmbed = new MessageEmbed()
        .setColor("#F0386B")
        .setTitle(flights[0].name)
        .setImage(flights[0].image)
        .addFields({
          name: "ðŸ“… Launch Date",
          value: `\`\`\`prolog\n ${new Date(flights[0].net).toLocaleDateString(
            "en-UK",
            {
              weekday: "short",
              year: "numeric",
              month: "long",
              day: "numeric",
            }
          )} at ${new Date(flights[0].net).toLocaleTimeString("en-US", {
            hour12: true,
            timeStyle: "short",
          })}\`\`\``,
        })
        .setTimestamp()
        .setFooter(
          "Generated by astronomia with TheSpaceDevs API",
          "https://go4liftoff.com/static/favicon.ico"
        );
      if (flights[0].mission.description) {
        currentFlightEmbed.setDescription(
          `\`\`\` ${flights[0].mission.description}\`\`\``
        );
      }
      if (flights[0].launch_service_provider) {
        currentFlightEmbed.addField(
          "Launch Provider",
          `\`\`\`${flights[0].launch_service_provider.name}\`\`\``,
          true
        );
      }
      if (flights[0].pad.name) {
        currentFlightEmbed.addField(
          "Launch Pad",
          `\`\`\`${flights[0].pad.name}\`\`\``,
          true
        );
      }
      if (flights[0].mission.type) {
        currentFlightEmbed.addField(
          "Flight Type",
          `\`\`\`${flights[0].mission.type}\`\`\``,
          true
        );
      }
      if (flights[0].pad.location.name) {
        currentFlightEmbed.addField(
          "Launch location",
          `\`\`\`${flights[0].pad.location.name}\`\`\``,
          true
        );
      }
      if (flights[0].pad.map_image) {
        currentFlightEmbed.addField("\u200b", "\u200b");
        currentFlightEmbed.addField(
          "\u200b",
          `[Pad Location](${flights[0].pad.map_image})`,
          true
        );
      }
      if (flights[0].pad.wiki_url) {
        currentFlightEmbed.addField(
          "\u200b",
          `[Wiki](${flights[0].pad.wiki_url})`,
          true
        );
      }
      message.channel.send(currentFlightEmbed);
    } else if (args[0].match(/(event)|(events)/g)) {
      const currentEventEmbed = new MessageEmbed()
        .setColor("#F0386B")
        .setTitle(events[0].name)
        .setImage(events[0].feature_image)
        .setURL(events[0].news_url)
        .setDescription(`\`\`\`css\n ${events[0].description}\`\`\``)
        .addFields(
          {
            name: "ðŸ“… Event Date",
            value: `\`\`\`prolog\n ${new Date(
              events[0].date
            ).toLocaleDateString("en-UK", {
              weekday: "short",
              year: "numeric",
              month: "long",
              day: "numeric",
            })} at ${new Date(events[0].date).toLocaleTimeString("en-US", {
              hour12: true,
              timeStyle: "short",
            })}\`\`\``,
          },
          {
            name: "Type",
            value: events[0].type.name,
            inline: true,
          },
          {
            name: "Event Location",
            value: events[0].location,
            inline: true,
          },
          {
            name: "\u200b",
            value: "\u200b",
          }
        )
        .setTimestamp()
        .setFooter(
          "Generated by astronomia with TheSpaceDevs API",
          "https://go4liftoff.com/static/favicon.ico"
        );
      if (events[0].launches[0].launch_service_provider) {
        currentEventEmbed.addField(
          "Launch Provider",
          `\`\`\`${events[0].launches[0].launch_service_provider.name}\`\`\``,
          true
        );
      }
      if (events[0].launches[0].program[0]) {
        currentEventEmbed.addField(
          "Program",
          `\`\`\`${events[0].launches[0].program[0].name}\`\`\``,
          true
        );
        currentEventEmbed.addField(
          "Agency",
          `\`\`\`${events[0].launches[0].program[0].agencies[0].name}\`\`\``,
          true
        );
      }
      if (events[0].launches[0].pad) {
        currentEventEmbed.addField("\u200b", "\u200b");
        currentEventEmbed.addField(
          "\u200b",
          `[Wiki](${events[0].launches[0].pad.wiki_url})`,
          true
        );
        currentEventEmbed.addField(
          "\u200b",
          `[Map](${events[0].launches[0].pad.map_url})`,
          true
        );
      }
      message.channel.send(currentEventEmbed);
    } else {
      message.channel.send("Please enter a valid command.");
    }
    message.channel.stopTyping();
  },
};
